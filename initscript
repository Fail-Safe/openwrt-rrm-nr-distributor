#!/bin/sh /etc/rc.common
#file: /etc/init.d/rrm_nr
## Based on: https://forum.openwrt.org/t/how-does-rrm-work/32635/68

START=99

NAME=rrm_nr
USE_PROCD=1

get_wifi_iface_count() {
	grep -c 'wifi-iface' /etc/config/wireless
}

get_enabled_iface_count() {
	local enabled_iface_count=0
	local wifi_iface_count="$(get_wifi_iface_count)"

	seq_end=$((wifi_iface_count - 1))
	for i in $(seq 0 $seq_end); do
		disabled=$(uci get wireless.@wifi-iface["$i"].disabled 2>/dev/null)
		if [ "$disabled" = "1" ]; then
			# logger -t "${NAME}" -p daemon.info "The wifi-iface for $(uci get wireless.@wifi-iface[$i].ssid) is disabled."
			continue
		else
			enabled_iface_count=$((enabled_iface_count + 1))
		fi
	done

	echo "$enabled_iface_count"
}

start_service() {
	[ ! -f /etc/config/wireless ] && logger -t "${NAME}" -p daemon.error "/etc/config/wireless does not exist" && exit 1

	#todo skip if nr is disabled for interface, skip disabled interface etc.
	wifi_iface_count=$(get_wifi_iface_count)
	[ "$wifi_iface_count" -eq 0 ] && logger -t "${NAME}" -p daemon.error "No wifi-iface stanzas found in /etc/config/wireless" && exit 1

	enabled_iface_count=$(get_enabled_iface_count)
	[ "$enabled_iface_count" -eq 0 ] && logger -t "${NAME}" -p daemon.error "No enabled wifi-iface stanzas found in /etc/config/wireless" && exit 1

	logger -t "${NAME}" -p daemon.info "Waiting for all wireless interfaces to initialize."
	while [ "$(ubus list hostapd.* | wc -l)" != "$(get_enabled_iface_count)" ]; do
		sleep 3
	done
	logger -t "${NAME}" -p daemon.info "All wireless interfaces are initialized."

	OIFS=$IFS
	IFS=$'\x0a'

	local rrm_own
	local ssid_count=0
	for value in $(ubus list hostapd.*); do
		curr_value=$(ubus call "${value}" rrm_nr_get_own)

		# This is a temporary measure to handle the bug with rrm_nr_get_own (https://github.com/openwrt/openwrt/issues/16875)
		if [ $? -eq 4 ]; then
			logger -t "${NAME}" -p daemon.error "The rrm_nr_get_own call failed for ${value}."
			/etc/init.d/wpad restart
			exit 1
		fi

		curr_value=$(echo "$curr_value" | jsonfilter -e '$.value')
		ssid_count=$((ssid_count + 1))

		# Using + as the delimiter instead of |. Because + is an invalid character to use in SSID naming,
		# this removes the known issue where | could not be used in the SSID name.
		rrm_own="${rrm_own}+SSID${ssid_count}=${curr_value}"
	done

	rrm_own="${rrm_own#*+}"
	IFS='+'
	set -- $rrm_own

	IFS=$OIFS

	procd_open_instance
	procd_set_param term_timeout 5
	procd_set_param command /bin/sh "/usr/bin/rrm_nr"
	#https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml?search=5247
	procd_add_mdns "rrm_nr" "udp" "5247" "$@"
	procd_close_instance
}

boot() {
	start
}

service_triggers() {
	procd_add_reload_trigger "network" "wireless"
}
